#!/usr/bin/env php
<?php
/**
 * msync
 * Synchronize directories like rsync but with an additional manifest so that
 * changes on the remote system are caught before damage is done.
 *
 * Written using macOS 13.1 Ventura for the local workstation and
 * connecting to a server running Debian 10.
 */

use Logic\HelpException;
use Logic\MSync;

ini_set('error_reporting', E_ALL);

require 'vendor/diskerror/autoload/autoload.php';

const USAGE = <<<'NDOC'
Usage:
	msync -H | --help
	msync [options] init | pull | push | resolve «relative path»

NDOC;

$exitCode = 0;

try {
	$msync = new MSync($argv);
	
	ini_set('memory_limit', -1);

	$msync->run();
}
catch (HelpException $e){
	fprintf(STDOUT, USAGE . PHP_EOL);
	fprintf(STDOUT, file_get_contents(__DIR__ . '/help_screen.txt'));
}
catch (RuntimeException $e) {
	fprintf(STDERR, $e->getMessage() . PHP_EOL);
	fprintf(STDERR, USAGE);
	$exitCode = $e->getCode();
}
catch (Throwable $t) {
	fprintf(STDERR, $t . PHP_EOL);
	$exitCode = $t->getCode();
}

exit($exitCode);
